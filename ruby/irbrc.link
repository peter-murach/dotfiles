#!/user/bin/ruby

require 'irb/completion'
require 'irb/ext/save-history'
require 'rubygems' unless ENV['NO_RUBYGEMS']

IRB.conf[:AUTO_INDENT]  = true
IRB.conf[:SAVE_HISTORY] = 1000
IRB.conf[:HISTORY_FILE] = "#{ENV['HOME']}/.irb_history"
IRB.conf[:PROMPT_MODE]  = :SIMPLE

# Extend object with helper methods
class Object
  # list methods which aren't in superclass
  def local_methods(obj = self)
    (obj.methods - obj.class.superclass.instance_methods).sort
  end
  alias :lm :local_methods

  # print documentation
  def ri(method = nil)
    unless method && method =~ /^[A-Z]/ # if class isn't specified
      klass = self.kind_of?(Class) ? name : self.class.name
      method = [klass, method].compact.join('#')
    end
    puts `ri '#{method}'`
  end
end

# Extend Array & Hash with toy methods
class Array
  def self.toy(n=10, &block)
    block_given? ? Array.new(n, &block) : Array.new(n) { |i| i + 1 }
  end
end

class Hash
  def self.toy(n=10)
    Hash[Array.toy(n).zip(Array.toy(n){|c| (96+(c+1)).chr})]
  end
end

# Load rails irb extensions
railsrc_path = File.expand_path "~/.railsrc"
if defined?(Rails) || ENV['RAILS_ENV']
  puts "#{ENV['RAILS_ENV']}"
  begin
    load railsrc_path
  rescue Exception
    warn "Counld not load: #{railsrc_path}: #{$!.message}"
  end
end

# Load Pry if available
# begin
#   require 'pry'
#   Pry.start
#   exit
# rescue LoadError
# end
