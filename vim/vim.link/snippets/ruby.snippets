# #!/usr/bin/ruby
snippet #!
	#! /usr/bin/env ruby

snippet @
	@${1:attribute} = $1
snippet case
	case ${1:object}
	when ${2:condition}
		${3}
	end
snippet if
	if ${1:condition}
		${2}
	end
snippet ife
	if ${1:condition}
		${2}
	else
		${3}
	end
snippet eif
	elsif ${1:condition}
		${2}
snippet unless
	unless ${1:condition}
		${2}
	end
snippet wh
	while ${1:condition}
		${2}
	end
snippet until
	until ${1:condition}
		${2}
	end
snippet r
	attr_reader :${1:attr_names}
snippet w
	attr_writer :${1:attr_names}
snippet ac
	attr_accessor :${1:attr_names}
snippet mis
	def method_missing(method_name, *args, &block)
		${1}
	end
snippet res
	def respond_to_missing?(method_name, include_private = false)
		${1}
	end
snippet .e
	.each do |${1:n}|
		${2}
	end
snippet here
	<<-EOF
		${1}
	EOF
